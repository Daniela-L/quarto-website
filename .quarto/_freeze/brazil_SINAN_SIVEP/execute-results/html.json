{
  "hash": "752981f85c99a08a8c6e432721034d8f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SIVEP_SINAN\"\nauthor: \"Daniela LÃ¼hrsen\"\ndate: \"2024-10-15\"\noutput: html_document\n---\n\n\n\n\n\n\n# Getting to know the Data\n\n### *Differences between datasets*\n\nFirst of all, it is important to note that, although the content of the data is always the same, the structure of data can differ depending on the selected year, on how one got the data and on when you obtain the data (since recent years can be updated retroactively after being published).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# den15 <- fetch_datasus(year_start = 2015, year_end = 2015, information_system = \"SINAN-DENGUE\")\n# den21 <- fetch_datasus(year_start = 2021, year_end = 2021, information_system = \"SINAN-DENGUE\")\nden15 <- readRDS(\"data/den15.rds\")\nden21 <- readRDS(\"data/den21.rds\")\n```\n:::\n\n\n\n\n### *Differences between two years*\n\nComparing the two datasets downloaded via microdatasus, from years 2015 and 2021, the first is to check whether there are different columns.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# compare number of cases\nif (nrow(den21) == nrow(den15)){\n  print(\"Both datasets have the same number of cases.\")\n} else{\n  print(paste0(\"These documents have different number of cases, the 2021 dataset has \",\n               nrow(den21), \" cases, while the 2015 dataset has \",\n               nrow(den15),\" cases.\"))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"These documents have different number of cases, the 2021 dataset has 1010359 cases, while the 2015 dataset has 2398060 cases.\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# compare variables names\nif (identical(colnames(den15), colnames(den21))){\n  print(\"Both datsets contain the same columns.\")\n} else{\n  print(paste0(\"The columns that are different are: \",\n               paste(c(setdiff(colnames(den15), colnames(den21)),\n                       setdiff(colnames(den21), colnames(den15))), collapse=\", \")))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"The columns that are different are: DT_NASC, ANO_NASC, DT_DIGITA, MIGRADO_W\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get unique column names from both data frames\nall_columns <- unique(c(names(den15), names(den21)))\n\n# Function to calculate the proportion of NA values in a column\nna_proportion <- function(col) {\n  round(mean(is.na(col))*100,2)\n}\n\n# Apply the function to each column of the data frames\nden15_na <- sapply(all_columns,\n                 function(col) ifelse(col %in% names(den15),\n                                      na_proportion(den15[[col]]),\n                                      NA))\nden21_na <- sapply(all_columns,\n                 function(col) ifelse(col %in% names(den21),\n                                      na_proportion(den21[[col]]),\n                                      NA))\n\n# Combine the results into a new data frame\nknitr::kable(data.frame(column = all_columns, den15 = den15_na,den21 = den21_na)[24:29,])\n```\n\n::: {.cell-output-display}\n\n\n|         |column   | den15| den21|\n|:--------|:--------|-----:|-----:|\n|FEBRE    |FEBRE    |  97.8|  2.22|\n|MIALGIA  |MIALGIA  |  97.8|  2.22|\n|CEFALEIA |CEFALEIA |  97.8|  2.22|\n|EXANTEMA |EXANTEMA |  97.8|  2.22|\n|VOMITO   |VOMITO   |  97.8|  2.22|\n|NAUSEA   |NAUSEA   |  97.8|  2.22|\n\n\n:::\n:::\n\n\n\n\nFor most variables, the amount of missing values stays similar. However, in the cases of rows 24-44, which coincide with the symptoms, it is noticeable that in 2015 all values are missing, while 98% of the cases in 2021 filled out this variable. This indicates that the variable may have not existed in 2015. It is possible to find two dengue dictionary database version around 2015. One version comes from [2010](https://www.saude.go.gov.br/images/imagens_migradas/upload/arquivos/2013-08/dengue2.pdf) and the other, [2015](http://www.portalsinan.saude.gov.br/images/documentos/Agravos/Dengue/DIC_DADOS_ONLINE.pdf). In the first one, the symptoms variables are not there.\n\n### *Differences between two datasets obtained differently*\n\nAccessing data for the same year, even from the same organization, but via a different method can also lead to a different dataset. Here, the dataset was requested directly via the [e-SIC platform](https://www.gov.br/acessoainformacao/pt-br). <!-- Double check this -->\n\nThe following code cannot be reproduced.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nThe two data sets have different number of variables, below a dataframe showcasing the variables that only appear in one of them: There are the same number of registers but differences between the variables.\n\nIf we compare the requested and the downloaded database for the same year?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# compare number of cases\nif (nrow(den15_dbf) == nrow(den15)){\n  print(\"Both datasets have the same number of cases.\")\n} else{\n  print(paste0(\"These documents have different number of cases, the one obtained by ... has\",\n               nrow(den15_dbf), \" cases, while the dataset obtained by microdatasus has \",\n               nrow(den15),\" cases.\"))\n}\n\n# compare variables names\nif (identical(colnames(den15_dbf), colnames(den15))){\n  print(\"Both datsets contain the same columns.\")\n} else{\n  print(paste0(\"The columns that are different are: \",\n               paste(c(setdiff(colnames(den15), colnames(den15_dbf)),\n                       setdiff(colnames(den15_dbf), colnames(den15))), collapse=\", \")))\n}\n\n# Get unique column names from both data frames\nall_columns <- unique(c(names(den15), names(den15_dbf)))\n\n# Function to calculate the proportion of NA values in a column\nna_proportion <- function(col) {\n  round(mean(is.na(col))*100,2)\n}\n\n# Apply the function to each column of the data frames\nden15_na <- sapply(all_columns,\n                 function(col) ifelse(col %in% names(den15),\n                                      na_proportion(den15[[col]]),\n                                      NA))\nden15_dbf_na <- sapply(all_columns,\n                 function(col) ifelse(col %in% names(den15_dbf),\n                                      na_proportion(den15_dbf[[col]]),\n                                      NA))\n\n# Combine the results into a new data frame\nknitr::kable(data.frame(column = all_columns, den15 = den15_na,den15_dbf = den15_dbf_na)[1:10,])\n```\n:::\n\n\n\n\n### *Difference depending on when you obtained the data*\n\nNow, lets compare data from the same source for the same year but obtained at different moments in time.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue21 <- read.dbc(\"Data/Disease/Dengue/DENGBR21.dbc\")\ndengue21_old <- read.dbc(\"Data/Disease/Dengue/DENGBR21_old.dbc\")\n\n# compare number of cases\nif (nrow(dengue21) == nrow(dengue21_old)){\n  print(\"Both datasets have the same number of cases.\")\n} else{\n  print(paste0(\"These documents have different number of cases, the new 2021 dataset has \",\n               nrow(dengue21), \" cases, while the old 2021 dataset has \",\n               nrow(dengue21_old),\" cases.\"))\n}\n\n# compare variables names\nif (identical(colnames(dengue21), colnames(dengue21_old))){\n  print(\"Both datsets contain the same columns.\")\n} else{\n  print(paste0(\"The columns that are different are: \",\n               paste(c(setdiff(colnames(dengue21), colnames(dengue21_old)),\n                       setdiff(colnames(dengue21_old), colnames(dengue21))), collapse=\", \")))\n}\n\n# Get unique column names from both data frames\nall_columns <- unique(c(names(dengue21), names(dengue21_old)))\n\n# Function to calculate the proportion of NA values in a column\nna_proportion <- function(col) {\n  round(mean(is.na(col))*100,2)\n}\n\n# Apply the function to each column of the data frames\ndengue21_na <- sapply(all_columns,\n                 function(col) ifelse(col %in% names(dengue21),\n                                      na_proportion(dengue21[[col]]),\n                                      NA))\ndengue21_old_na <- sapply(all_columns,\n                 function(col) ifelse(col %in% names(dengue21_old),\n                                      na_proportion(dengue21_old[[col]]),\n                                      NA))\n\n# Combine the results into a new data frame\nknitr::kable(data.frame(column = all_columns, dengue21 = dengue21_na,dengue21_old = dengue21_old_na)[65:70,])\n```\n:::\n\n\n\n\nIn general the count of NAs throughout the data set is similar, however in rows 66-69, corresponding to the probable areas of infection, the amount changes. In the \"old\" data, there is data registered, however in the newer version this data was removed.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}